f1:
cmpq $0, %rdi
jz .else26
movq $2, %rax
jmp .epilog26
.else26:
movq $4, %rax
.epilog26:
ret
f2:
movq $2, %r11
cmp $10, %rdi
leaq 0(, 1), %rsi
cmovz %r11, %rsi
cmpq $0, %rsi
jz .else25
movq $2, %rax
jmp .epilog25
.else25:
movq $4, %rax
.epilog25:
ret
f3:
testq $1, %rdi
jnz raisesig
movq $2, %r11
cmp $10, %rdi
leaq 0(, 1), %rsi
cmovl %r11, %rsi
cmpq $0, %rsi
jz .else24
movq $2, %rax
jmp .epilog24
.else24:
movq $4, %rax
.epilog24:
ret
f4:
testq $1, %rdi
jnz raisesig
movq $2, %r11
cmp $10, %rdi
leaq 0(, 1), %rsi
cmovg %r11, %rsi
cmpq $0, %rsi
jz .else23
movq $2, %rax
jmp .epilog23
.else23:
movq $4, %rax
.epilog23:
ret
f5:
testq $1, %rdi
jnz raisesig
leaq (%rdi, %rdi, 4), %rsi
sarq $1, %rsi
cmpq $0, %rsi
jz .else22
movq $2, %rax
jmp .epilog22
.else22:
movq $4, %rax
.epilog22:
ret
f6:
testq $1, %rdi
jnz raisesig
leaq 4(%rdi), %rsi
cmpq $0, %rsi
jz .else21
movq $2, %rax
jmp .epilog21
.else21:
movq $4, %rax
.epilog21:
ret
f7:
testq $1, %rdi
jnz raisesig
leaq -2(%rdi), %rsi
cmpq $0, %rsi
jz .else20
movq $2, %rax
jmp .epilog20
.else20:
movq $4, %rax
.epilog20:
ret
f8:
testq $1, %rdi
jnz raisesig
movq %rdi, %rsi
andq $2, %rsi
cmpq $0, %rsi
jz .else19
movq $2, %rax
jmp .epilog19
.else19:
movq $4, %rax
.epilog19:
ret
f9:
movq %rdi, (%r15)
movq %rdi, 8(%r15)
movq %r15, %rsi
addq $16, %r15
cmpq $0, %rsi
jz .else18
movq $2, %rax
jmp .epilog18
.else18:
movq $4, %rax
.epilog18:
ret
f10:
movq $2, (%r15)
movq $2, 8(%r15)
movq %r15, %rsi
addq $16, %r15
cmpq $0, %rsi
jz .else0
movq $2, %rax
jmp .epilog0
.else0:
movq $4, %rax
.epilog0:
ret
f11:
testq $1, %rdi
jnz raisesig
movq %rdi, %rsi
xorq $2, %rsi
cmpq $0, %rsi
jz .else17
movq $2, %rax
jmp .epilog17
.else17:
movq $4, %rax
.epilog17:
ret
f12:
movq %rdi, %rsi
andq $1, %rsi
xorq $1, %rsi
cmpq $0, %rsi
jz .else16
movq $2, %rax
jmp .epilog16
.else16:
movq $4, %rax
.epilog16:
ret
f13:
movq $2, %r11
movq %rdi, %rsi
andq $3, %rsi
cmpq $1, %rsi
lea 0(,1), %rsi
cmovz %r11, %rsi
cmpq $0, %rsi
jz .else15
movq $2, %rax
jmp .epilog15
.else15:
movq $4, %rax
.epilog15:
ret
f14:
movq $2, %r11
movq %rdi, %rsi
andq $3, %rsi
cmpq $3, %rsi
lea 0(,1), %rsi
cmovz %r11, %rsi
cmpq $0, %rsi
jz .else14
movq $2, %rax
jmp .epilog14
.else14:
movq $4, %rax
.epilog14:
ret
f15:
testq $1, %rdi
jz raisesig
testq $2, %rdi
jnz raisesig
movq %rdi, %rsi
subq $1, %rsi
movq (%rsi), %rsi
cmpq $0, %rsi
jz .else13
movq $2, %rax
jmp .epilog13
.else13:
movq $4, %rax
.epilog13:
ret
f16:
testq $1, %rdi
jz raisesig
testq $2, %rdi
jnz raisesig
movq %rdi, %rsi
subq $1, %rsi
movq 8(%rsi), %rsi
cmpq $0, %rsi
jz .else12
movq $2, %rax
jmp .epilog12
.else12:
movq $4, %rax
.epilog12:
ret
f17:
cmpq $0, %rdi
jz .else11
testq $1, %rdi
jnz raisesig
leaq -2(%rdi), %rax
jmp .epilog11
.else11:
leaq 2(%rdi), %rax
.epilog11:
ret
f18:
cmpq $0, %rdi
jz .else10
testq $1, %rdi
jnz raisesig
movq %rdi, %rax
sarq $1, %rax
imulq %rdi, %rax
jmp .epilog10
.else10:
leaq (, %rdi, 2), %rax
.epilog10:
ret
f19:
cmpq $0, %rdi
jz .else9
movq $2, %r11
cmp $10, %rdi
leaq 0(, 1), %rax
cmovz %r11, %rax
jmp .epilog9
.else9:
testq $1, %rdi
jnz raisesig
movq $2, %r11
cmp $10, %rdi
leaq 0(, 1), %rax
cmovl %r11, %rax
.epilog9:
ret
f20:
movq $2, %rsi
cmpq $0, %rsi
jz .else8
testq $1, %rdi
jnz raisesig
leaq (%rdi, %rdi, 4), %rax
jmp .epilog8
.else8:
movq $-84, %rax
.epilog8:
ret
f21:
movq $2, %rsi
cmpq $0, %rsi
jz .else7
movq $-84, %rax
jmp .epilog7
.else7:
testq $1, %rdi
jnz raisesig
leaq 2(%rdi), %rax
.epilog7:
ret
f22:
movq $0, %rsi
cmpq $0, %rsi
jz .else6
testq $1, %rdi
jnz raisesig
leaq (%rdi, %rdi, 4), %rax
jmp .epilog6
.else6:
movq $-84, %rax
.epilog6:
ret
f23:
movq $0, %rsi
cmpq $0, %rsi
jz .else5
movq $-84, %rax
jmp .epilog5
.else5:
testq $1, %rdi
jnz raisesig
leaq -2(%rdi), %rax
.epilog5:
ret
f24:
testq $1, %rdi
jnz raisesig
movq $2, %r11
cmp $0, %rdi
leaq 0(, 1), %rsi
cmovl %r11, %rsi
cmpq $0, %rsi
jz .else4
movq $2, %r11
cmp $-84, %rdi
leaq 0(, 1), %rsi
cmovz %r11, %rsi
cmpq $0, %rsi
jz .else2
movq $-2674, %rax
jmp .epilog2
.else2:
leaq 2(%rdi), %rax
.epilog2:
jmp .epilog4
.else4:
movq $2, %r11
cmp $26, %rdi
leaq 0(, 1), %rsi
cmovz %r11, %rsi
cmpq $0, %rsi
jz .else3
movq $2674, %rax
jmp .epilog3
.else3:
leaq 2(%rdi), %rax
.epilog3:
.epilog4:
ret
f25:
testq $1, %rdi
jz raisesig
testq $2, %rdi
jnz raisesig
movq %rdi, %rsi
subq $1, %rsi
movq (%rsi), %rsi
testq $1, %rsi
jnz raisesig
movq %rdi, %rdx
subq $1, %rdx
movq 8(%rdx), %rdx
testq $1, %rdx
jnz raisesig
movq $2, %r11
cmp %rsi, %rdx
leaq 0(, 1), %rsi
cmovg %r11, %rsi
cmpq $0, %rsi
jz .else1
movq %rdi, %rax
subq $1, %rax
movq (%rax), %rax
jmp .epilog1
.else1:
movq %rdi, %rax
subq $1, %rax
movq 8(%rax), %rax
.epilog1:
ret
